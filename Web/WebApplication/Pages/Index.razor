@page "/"
@using Business.Models
@using Newtonsoft.Json
@inject NavigationManager NavigationManager
@inject HttpClient _HttpClient;

<form action="#" @onsubmit="Scan">
    Guid to Scan
    <input type="text" name="txt"/>
</form>

<button class="btn btn-primary" disabled="@(!(Items.Count > 0))" @onclick="Checkout">Checkout</button>
@InvId
<Cart @ref="child" NFC="false" callBack="callback"/>


@code
{
    private List<Cart.Item> Items = new List<Cart.Item>();

    private Cart child;

    public void callback(List<Cart.Item> items)
    {
        Items = items;
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
    //Get the contents of the basket
    // var timer = new System.Threading.Timer(
    //     e => Scan(),  
    //     null, 
    //     TimeSpan.Zero, 
    //     TimeSpan.FromMilliseconds(500));
    }

    private void Scan()
    {
        child.UpdateMessage(Guid.Parse("0f8fad5b-d9cb-469f-a165-70867728950e"));

        StateHasChanged();
    }

    private Guid InvId;

    private async void Checkout()
    {
        var inventory = new List<Inventory>();
        foreach (var item in Items)
        {
            inventory.Add(new Inventory()
            {
                ItemId = item.ItemId,
                Time = DateTime.Now,
                Quantity = item.Quantity,
                Monies = item.SellPrice,
                Export = true
            });
        }
        
        var response = await Utils.PostAsync("api/Inventory/List", Items);
        if (response.IsSuccessStatusCode)
        {
            InvId = JsonConvert.DeserializeObject<Guid>(await response.Content.ReadAsStringAsync());
        
            Items = new List<Cart.Item>();
            StateHasChanged();
            child.Clear();    
        }
    }
}