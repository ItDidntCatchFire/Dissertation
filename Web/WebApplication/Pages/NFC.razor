@page "/NFC"
@inject IJSRuntime JSRuntime;
<h1>NFC</h1>

<p class="mt-2" style="font-size:1.6em">
    <span class="badge badge-success">
        @_convertedText
    </span>
</p>

<button type="button" class="btn btn-primary" @onclick="DoAThing">
    Do A Thing
</button>

@if (NfcData == new List<string>())
{
    <p><em>Loading...</em></p>
}
else
{
    var temp = "";
    @foreach (var str in NfcData)
    {
        temp += str + "<br>";
    }
    <p><em>@temp</em></p>
}


@code {
    public static MarkupString _convertedText =
        new MarkupString("Select the <b>Convert Array</b> button.");
    
    private static Action _action;
    private static string _message = "Select the button.";
    
    protected override void OnInitialized()
    {
        _action = UpdateMessage;
        JSRuntime.InvokeVoidAsync("NFCScan");
        
        StateHasChanged();
    }

    private static List<string> NfcData = new List<string>();

    private void DoAThing()
    {
        _convertedText = new MarkupString("DoAThing");
        
        
        StateHasChanged();
    }
    
    private void UpdateMessage()
    {
        _convertedText = new MarkupString(_message);
       StateHasChanged();
    }
    
    [JSInvokable]
    public static void UpdateMessageCaller(string param)
    {
        NfcData.Add(param);
        _message = param;
        _action.Invoke();
    }
}
