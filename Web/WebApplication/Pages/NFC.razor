@page "/NFC"
@inject IJSRuntime JSRuntime;
@if (!@permission)
{
    <button @onclick="NFCPermission">
        Start Scanning
    </button>    
}
else if (Items == null)
{
    <p><em>Please Scan Something</em></p>
}
else
{
    <p>Total Price @Items.Sum(x => (x.Quantity * x.SellPrice))</p>
    <div class="list-group overflow-auto" style="height: 60vh">
        @foreach (var item in Items)
        {
            <a href="#" class="list-group-item list-group-item-action flex-column align-items-start">
                <div class="d-flex w-100 justify-content-between">
                    <p class="mb-1">@item.Name</p>
                    <small>Price @item.SellPrice</small>
                    <small>Quantity @item.Quantity</small>
                    <small>Total Price @(item.Quantity * item.SellPrice)</small>
                </div>
            </a>
        }
    </div>
}


@code {
    private static List<Item> Items;
    private static Action _action;
    private static HttpClient _httpClient;
    private static bool permission;
    
    protected override async void OnInitialized()
    {
        _httpClient = new HttpClient();
        _action = UpdateMessage;
        
        NFCPermission();
    }


    private void UpdateMessage()
    {
        StateHasChanged();
    }

    private async void NFCPermission()
    {
        permission = await JSRuntime.InvokeAsync<bool>("NFCScan");

        StateHasChanged();
    }

    [JSInvokable]
    public static async void UpdateMessageCaller(string data)
    {
        try
        {
            var _item = await _httpClient.GetJsonAsync<Business.Models.Item>("https://192.168.0.103:5002/api/Item/" + data);
            
            if (Items == null)
                Items = new List<Item>();

            //If we already have the item just increase the quantity otherwise add a new item
            if (Items.FirstOrDefault(x => x.ItemId == Guid.Parse(data)) != null)
            {
                Items.First(x => x.ItemId == Guid.Parse(data)).Quantity++;    
            }
            else
            {
                var item = new Item()
                {
                    ItemId = _item.ItemId,
                    Name = _item.Name,
                    Description = _item.Description,
                    BuyPrice = _item.BuyPrice,
                    SellPrice = _item.SellPrice,
                    ShelfLife = _item.ShelfLife,
                    Quantity = 1
                };
                
                Items.Add(item);    
            }
            
        
            _action.Invoke();
        }
        catch (Exception ex)
        {
            
        }
    }

    public class Item : Business.Models.Item
    {
        public int Quantity { get; set; }
    }
}
